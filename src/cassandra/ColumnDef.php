<?php
namespace cassandra;

/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;
use Thrift\Type\TMessageType;
use Thrift\Exception\TException;
use Thrift\Exception\TProtocolException;
use Thrift\Protocol\TProtocol;
use Thrift\Protocol\TBinaryProtocolAccelerated;
use Thrift\Exception\TApplicationException;

class ColumnDef extends TBase
{
    static public $isValidate = true;

    static public $_TSPEC = array(
        1 => array(
            'var' => 'name',
            'isRequired' => true,
            'type' => TType::STRING,
        ),
        2 => array(
            'var' => 'validation_class',
            'isRequired' => true,
            'type' => TType::STRING,
        ),
        3 => array(
            'var' => 'index_type',
            'isRequired' => false,
            'type' => TType::I32,
        ),
        4 => array(
            'var' => 'index_name',
            'isRequired' => false,
            'type' => TType::STRING,
        ),
        5 => array(
            'var' => 'index_options',
            'isRequired' => false,
            'type' => TType::MAP,
            'ktype' => TType::STRING,
            'vtype' => TType::STRING,
            'key' => array(
                'type' => TType::STRING,
            ),
            'val' => array(
                'type' => TType::STRING,
                ),
        ),
    );

    /**
     * @var string
     */
    public $name = null;
    /**
     * @var string
     */
    public $validation_class = null;
    /**
     * @var int
     */
    public $index_type = null;
    /**
     * @var string
     */
    public $index_name = null;
    /**
     * @var array
     */
    public $index_options = null;

    public function __construct($vals = null)
    {
        if (is_array($vals)) {
            parent::__construct(self::$_TSPEC, $vals);
        }
    }

    public function getName()
    {
        return 'ColumnDef';
    }


    public function read($input)
    {
        $tmp = $this->_read('ColumnDef', self::$_TSPEC, $input);
        $this->_validateForRead();
        return $tmp;
    }


    public function write($output)
    {
        $this->_validateForWrite();
        return $this->_write('ColumnDef', self::$_TSPEC, $output);
    }


    private function _validateForRead() {
        if ($this->name === null) {
            throw new TProtocolException('Required field ColumnDef.name is unset!');
        }
        if ($this->validation_class === null) {
            throw new TProtocolException('Required field ColumnDef.validation_class is unset!');
        }
    }

    private function _validateForWrite() {
        if ($this->name === null) {
            throw new TProtocolException('Required field ColumnDef.name is unset!');
        }
        if ($this->validation_class === null) {
            throw new TProtocolException('Required field ColumnDef.validation_class is unset!');
        }
    }
}
